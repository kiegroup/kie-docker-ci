<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.kie.docker</groupId>
    <artifactId>kie-docker-ci</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>kie-docker-ui-webapp</artifactId>
  <packaging>war</packaging>
  <name>KIE :: Docker UI Webapp</name>

  <dependencies>

    <dependency>
      <groupId>com.github.docker-java</groupId>
      <artifactId>docker-java</artifactId>
    </dependency>

    <dependency>
      <groupId>com.allen-sauer.gwt.dnd</groupId>
      <artifactId>gwt-dnd</artifactId>
    </dependency>

    <dependency>
      <groupId>com.bradrydzewski</groupId>
      <artifactId>gwt-cal</artifactId>
    </dependency>

    <!-- Use same commons-io:commons-io artifact version as docker java client, if not, runtime exceptions appear. -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
    </dependency>

    <dependency>
      <groupId>com.github.gwtbootstrap</groupId>
      <artifactId>gwt-bootstrap</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>

    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty</artifactId>
      <scope>provided</scope>
    </dependency>
    
  </dependencies>
  
  <build>
    <outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}</directory>
              <includes>
                <include>src/main/webapp/org.kie.dockerui.DockerUI/</include>
                <include>src/main/webapp/WEB-INF/deploy/</include>
                <include>src/main/webapp/WEB-INF/classes/</include>
                <include>src/main/webapp/WEB-INF/lib/</include>
                <include>**/gwt-unitCache/**</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>2.7.0</version>
        <configuration>
          <deploy>${project.build.directory}/gwt-symbols-deploy</deploy>
          <localWorkers>4</localWorkers>
          <logLevel>INFO</logLevel>
          <module>org.kie.dockerui.DockerUI</module>
          <draftCompile>false</draftCompile>
          <force>true</force>
          <strict>true</strict>
          <runTarget>docker-ui.html</runTarget>
          <extraJvmArgs>-Xmx1024m -XX:CompileThreshold=7000 -XX:MaxPermSize=512M</extraJvmArgs>
          <noServer>false</noServer>
          <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
          <hostedWebapp>src/main/webapp</hostedWebapp>
          <disableCastChecking>true</disableCastChecking>
          <gwtSdkFirstInClasspath>true</gwtSdkFirstInClasspath>
        </configuration>
        <executions>
          <execution>
            <id>gwt-clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
          <execution>
            <id>gwt-compile</id>
            <goals>
              <goal>resources</goal>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptors>
            <descriptor>${project.basedir}/src/main/assembly/assembly-wildfly10.xml</descriptor>
          </descriptors>
          <archive>
            <addMavenDescriptor>true</addMavenDescriptor>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>1.4.18</version>
        <configuration>
          <container>
            <containerId>wildfly9x</containerId>
            <type>installed</type>
            <artifactInstaller>
              <groupId>org.wildfly</groupId>
              <artifactId>wildfly-dist</artifactId>
              <version>${version.org.wildfly}</version>
            </artifactInstaller>
            <systemProperties>
              <!-- Fixes issue when Tomcat or WildFly hangs during deployment due to insufficient amount of entropy.
                   The property specifies less secure source of entropy, which is fine for testing.
                   See https://wiki.apache.org/tomcat/HowTo/FasterStartUp#Entropy_Source for more info -->
              <java.security.egd>file:/dev/./urandom</java.security.egd>
            </systemProperties>
          </container>
          <deployables>
            <deployable>
              <groupId>${project.groupId}</groupId>
              <artifactId>kie-docker-ui-webapp</artifactId>
              <classifier>wildfly10</classifier>
              <type>war</type>
              <properties>
                <context>kie-docker-ui-webapp</context>
              </properties>
              <pingURL>http://localhost:8080/kie-docker-ui-webapp</pingURL>
              <pingTimeout>30000</pingTimeout>
            </deployable>
          </deployables>
          <configuration>
            <properties>
              <cargo.servlet.port>8080</cargo.servlet.port>
            </properties>
          </configuration>
        </configuration>
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    
  </build>

</project>